# -*- coding: utf-8 -*-
"""Regressao.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VTLNKOrZx6LKro3D4jYh_5b3exax0y2u
"""
"""# Código para auxiliar na seleção de variaveis para  o modelo"""

"""## Importação das bibliotecas"""
import pandas  as pd
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.formula.api as sm
import scipy.stats as stats
import seaborn as sns

"""## Carregamento e pré-processamento do dataset"""
base = pd.read_csv('mt_cars.csv')
base.shape
base.head()

base = base.drop(['Unnamed: 0'], axis=1)

"""## Análise de correlação"""
corr = base.corr()
sns.heatmap(corr, cmap='coolwarm', annot=True, fmt='.2f')

"""## Análise exploratória com scatter plots"""
column_pairs = [('mpg', 'cyl'),('mpg', 'disp'),('mpg', 'wt'),('mpg', 'drat'),('mpg', 'vs')]
n_plots = len(column_pairs)
fig, axes = plt.subplots(nrows=n_plots, ncols=1, figsize=(6, 4*n_plots))

for i, pair in enumerate(column_pairs):
  x_col, y_col = pair
  sns.scatterplot(x=x_col, y=y_col, data=base, ax=axes[i])
  axes[i].set_title(f'{x_col} vs {y_col}')

plt.tight_layout()
plt.show()

"""## Construção e ajuste de modelos de regressão"""
#AIC:	156.6 & BIC:	162.5
#modelo = sm.ols(formula='mpg ~ wt + disp + hp', data=base)
#AIC:	165.1 & BIC:	169.5
#modelo = sm.ols(formula='mpg ~ disp + cyl', data=base)
#AIC:	179.1 & BIC:	183.5
modelo = sm.ols(formula='mpg ~ vs + drat', data=base)
modelo = modelo.fit()
modelo.summary()

"""## Análise dos resíduos"""
"""### Histograma dos residuos"""
residuos = modelo.resid
plt.hist(residuos, bins=20)
plt.xlabel('Resíduos')
plt.ylabel('Frequência')
plt.title('Histograma dos Resíduos')
plt.show()
"""## Q-Q Plot dos resíduos"""
stats.probplot(residuos, dist='norm', plot=plt)
plt.title('Q-Q Plot dos Resíduos')
plt.show()

"""## Teste de normalidade (Shapiro-Wilk)"""
# h0 - dados estão normalmente distribuídos
# h1 - dados não estão normalmente distribuídos
# p <= 0.05 rejeito a hipotese nula, (não estão normalmente distribuídos)
# p > 0.05 não é possivel rejeitar h0
stat, pval = stats.shapiro(residuos)
print(f'Shapiro-Wilk statística: {stat:.3f}, p-value: {pval:.3f}')